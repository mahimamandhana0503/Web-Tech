{"version":3,"sources":["Campus.js","App.js","reportWebVitals.js","index.js"],"names":["Campus","props","_useState","useState","_useState2","Object","slicedToArray","graphic","setGraphic","useEffect","loadModules","then","_ref","Graphic","geometry","type","rings","symbol","color","outline","width","view","graphics","add","catch","err","console","error","remove","src_App","react_default","a","createElement","esm","style","height","viewProperties","center","zoom","src_Campus","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAgDeA,EA7CA,SAACC,GAAU,IAAAC,EAEQC,mBAAS,MAFjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEfK,EAFeH,EAAA,GAENI,EAFMJ,EAAA,GAyCtB,OAtCAK,oBAAU,WAiCN,OA/BAC,sBAAY,CAAC,iBAAiBC,KAAK,SAAAC,GAAe,IAuBxCL,EAAU,IAAIM,EAvB0BR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,OAuBlB,CACxBE,SAtBY,CACZC,KAAM,UACNC,MAAO,CACH,EAAE,QAAS,SACX,EAAE,OAAQ,UACV,EAAE,QAAS,UACX,EAAE,QAAS,YAiBfC,OAZe,CACfF,KAAM,cACNG,MAAO,CAAC,IAAI,EAAE,GAAI,KAClBC,QAAS,CACLD,MAAO,CAAC,IAAK,IAAK,KAClBE,MAAO,MASfZ,EAAWD,GACXN,EAAMoB,KAAKC,SAASC,IAAIhB,KACzBiB,MAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,KAEzB,WACHxB,EAAMoB,KAAKC,SAASM,OAAOrB,KAEhC,IAEI,aChCI,IAAAsB,EAAA,SAAC5B,GAAD,OACX6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,MAAO,CAAEd,MAAO,OAAQe,OAAQ,QACjCC,eAAgB,CACZC,OAAQ,EAAE,UAAU,QACpBC,KAAM,KAEVR,EAAAC,EAAAC,cAACO,EAAD,QCNOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAjC,KAAAgC,EAAAE,KAAA,UAAqBlC,KAAK,SAAAC,GAAiD,IAA9CkC,EAA8ClC,EAA9CkC,OAAQC,EAAsCnC,EAAtCmC,OAAQC,EAA8BpC,EAA9BoC,OAAQC,EAAsBrC,EAAtBqC,OAAQC,EAActC,EAAdsC,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDdU,IAASC,OACPtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,WAAP,KACEvB,EAAAC,EAAAC,cAACH,EAAD,OAEFyB,SAASC,eAAe,SAM1Bf","file":"static/js/main.b01aca6d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nconst Campus = (props) => {\r\n\r\n    const [graphic, setGraphic] = useState(null);\r\n    useEffect(() => {\r\n\r\n        loadModules(['esri/Graphic']).then(([Graphic]) => {\r\n            // Create a polygon geometry\r\n            const polygon = {\r\n                type: \"polygon\", // autocasts as new Polygon()\r\n                rings: [\r\n                    [-118.291, 34.0326],\r\n                    [-118.29, 34.02079],\r\n                    [-118.281, 34.01967],\r\n                    [-118.281, 34.02389]\r\n                ]\r\n            };\r\n\r\n            // Create a symbol for rendering the graphic\r\n            const fillSymbol = {\r\n                type: \"simple-fill\", // autocasts as new SimpleFillSymbol()\r\n                color: [200,0,20, 0.25],\r\n                outline: { // autocasts as new SimpleLineSymbol()\r\n                    color: [255, 255, 255],\r\n                    width: 1\r\n                }\r\n            };\r\n\r\n            // Add the geometry and symbol to a new graphic\r\n            const graphic = new Graphic({\r\n                geometry: polygon,\r\n                symbol: fillSymbol\r\n            });\r\n            setGraphic(graphic);\r\n            props.view.graphics.add(graphic);\r\n        }).catch((err) => console.error(err));\r\n\r\n        return function cleanup() {\r\n            props.view.graphics.remove(graphic);\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport default Campus;","import Campus from './Campus'; \nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Map} from '@esri/react-arcgis';\n\nfunction App() {\n ReactDOM.render(\n  <Map /> ,\n  document.getElementById('container')\n );// ReactDOM.render()\n}// App()\n\nexport default (props) => (\n    <Map style={{ width: '70vw', height: '90vh' }}\n        viewProperties={{\n            center: [-118.28538,34.025],\n            zoom: 14\n        }}>\n        <Campus />\n    </Map>\n)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}